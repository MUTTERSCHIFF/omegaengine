/*
 * Copyright 2006-2014 Bastian Eicher
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 */

using System;
using AlphaFramework.World.Positionables;

namespace AlphaFramework.World.Paths
{
    /// <summary>
    /// Controls how an <see cref="EntityBase{TSelf,TCoordinates,TTemplate}"/> will move along a path generated by pathfinding.
    /// </summary>
    /// <typeparam name="TCoordinates">Data type for storing position coordinates of objects in the game world.</typeparam>
    /// <seealso cref="EntityBase{TSelf,TCoordinates,TTemplate}.PathControl"/>
    public abstract class PathControl<TCoordinates> : ICloneable
        where TCoordinates : struct
    {
        /// <inheritdoc/>
        public override string ToString()
        {
            return GetType().Name;
        }

        #region Clone
        /// <summary>
        /// Creates a shallow copy of this <see cref="PathControl{TCoordinates}"/>
        /// </summary>
        /// <returns>The cloned <see cref="PathControl{TCoordinates}"/>.</returns>
        public PathControl<TCoordinates> Clone()
        {
            // Perform initial shallow copy
            return (PathControl<TCoordinates>)MemberwiseClone();
        }

        object ICloneable.Clone()
        {
            return Clone();
        }
        #endregion
    }
}
