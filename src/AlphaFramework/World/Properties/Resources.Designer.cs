//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlphaFramework.World.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AlphaFramework.World.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The calculation has not been completed yet..
        /// </summary>
        public static string CalculationNotComplete {
            get {
                return ResourceManager.GetString("CalculationNotComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The coordinates are not within terrain range..
        /// </summary>
        public static string CoordinatesNotInRange {
            get {
                return ResourceManager.GetString("CoordinatesNotInRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating occlusion interval maps (for shadows).
        /// </summary>
        public static string GeneratingOcclusionIntervalMaps {
            get {
                return ResourceManager.GetString("GeneratingOcclusionIntervalMaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The height-map size must be equal to the terrain size..
        /// </summary>
        public static string HeightMapSizeEqualTerrain {
            get {
                return ResourceManager.GetString("HeightMapSizeEqualTerrain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of this texture map is incorrect..
        /// </summary>
        public static string InvalidMapSize {
            get {
                return ResourceManager.GetString("InvalidMapSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; has not been loaded yet..
        /// </summary>
        public static string NotLoaded {
            get {
                return ResourceManager.GetString("NotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The occlusion interval map size must be equal to the terrain size..
        /// </summary>
        public static string OcclusionIntervalMapSizeEqualTerrain {
            get {
                return ResourceManager.GetString("OcclusionIntervalMapSizeEqualTerrain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The terrain data was not loaded correctly.
        ///The file is probably damaged..
        /// </summary>
        public static string TerrainDataNotLoaded {
            get {
                return ResourceManager.GetString("TerrainDataNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The terrain size must be a multiple of three..
        /// </summary>
        public static string TerrainSizeMultipleOfThree {
            get {
                return ResourceManager.GetString("TerrainSizeMultipleOfThree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A color in the texture-map has no according terrain class..
        /// </summary>
        public static string TerrainTextureColorNotFound {
            get {
                return ResourceManager.GetString("TerrainTextureColorNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The texture-map size must be 1/3 of the terrain size..
        /// </summary>
        public static string TextureMapSizeThirdOfTerrain {
            get {
                return ResourceManager.GetString("TextureMapSizeThirdOfTerrain", resourceCulture);
            }
        }
    }
}
