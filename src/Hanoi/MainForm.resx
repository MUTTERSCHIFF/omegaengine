<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAAGACoDAAAJgAAABAQAAAAAAgAaAUAAM4MAAAoAAAAIAAAAEAAAAABABgAAAAAAAAM
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAyNXlmbzXeLTQXp/LUJ3USJbUQIrSPnrJM3S4O2mfRGKJYHKJgo2cr7G0AAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsczlXabbM6jmNbj1Pcj9Q9L+Rs7+QcH+
        O7n/MqX/KJL8Hn/zGGnNEVauCESMBC9jAyNDDBcnODg5fn5/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtM3kN5XiF6L6Irn+M8r/P9v/SuT/VOn/Ueb/VNv+RtL+P7z/M6j/JI37GnblD17BCEmcAzl4
        AShPABUsAwQHAQABERETWFhbqqusAAAAAAAAAAAAAAAAAAAAAAAAhKvmB4b6C53/G7P/Lcr/S+L/b/P/
        nfv/svz/s/z/qfL/nOz/lef+id/8eN3+ZdH6S77wMJ/bGm+4BkF9Axo8AQQMAQABAQABAQECLCkqfn19
        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
        AwPBAwO7AwPAAwPAAwO8AwO1AwO0DAytV1q4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAk5TcV1nHLzDEGRm+Fhe7ExSzGRq0Kiu7SUrEfn7NAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////////////////////+AAf/8AAA/8AAAB+AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPgAAAD8AAAD/AAAA/wAAAP+AAAD/wAAD/8AAA//gAAP/8A
        AP//AAD//wAA//+AAf//4Af///////////////////////////8oAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwADA3MAA8MqmAAQE
        BAAICAgADAwMABEREQAWFhYAHBwcACIiIgApKSkAVVVVAE1NTQBCQkIAOTk5AIB8/wBQUP8AkwDWAP/s
        zADG1u8A1ufnAJCprQAAADMAAABmAAAAmQAAAMwAADMAAAAzMwAAM2YAADOZAAAzzAAAM/8AAGYAAABm
        MwAAZmYAAGaZAABmzAAAZv8AAJkAAACZMwAAmWYAAJmZAACZzAAAmf8AAMwAAADMMwAAzGYAAMyZAADM
        zAAAzP8AAP9mAAD/mQAA/8wAMwAAADMAMwAzAGYAMwCZADMAzAAzAP8AMzMAADMzMwAzM2YAMzOZADMz
        zAAzM/8AM2YAADNmMwAzZmYAM2aZADNmzAAzZv8AM5kAADOZMwAzmWYAM5mZADOZzAAzmf8AM8wAADPM
        MwAzzGYAM8yZADPMzAAzzP8AM/8zADP/ZgAz/5kAM//MADP//wBmAAAAZgAzAGYAZgBmAJkAZgDMAGYA
        /wBmMwAAZjMzAGYzZgBmM5kAZjPMAGYz/wBmZgAAZmYzAGZmZgBmZpkAZmbMAGaZAABmmTMAZplmAGaZ
        mQBmmcwAZpn/AGbMAABmzDMAZsyZAGbMzABmzP8AZv8AAGb/MwBm/5kAZv/MAMwA/wD/AMwAmZkAAJkz
        mQCZAJkAmQDMAJkAAACZMzMAmQBmAJkzzACZAP8AmWYAAJlmMwCZM2YAmWaZAJlmzACZM/8AmZkzAJmZ
        ZgCZmZkAmZnMAJmZ/wCZzAAAmcwzAGbMZgCZzJkAmczMAJnM/wCZ/wAAmf8zAJnMZgCZ/5kAmf/MAJn/
        /wDMAAAAmQAzAMwAZgDMAJkAzADMAJkzAADMMzMAzDNmAMwzmQDMM8wAzDP/AMxmAADMZjMAmWZmAMxm
        mQDMZswAmWb/AMyZAADMmTMAzJlmAMyZmQDMmcwAzJn/AMzMAADMzDMAzMxmAMzMmQDMzMwAzMz/AMz/
        AADM/zMAmf9mAMz/mQDM/8wAzP//AMwAMwD/AGYA/wCZAMwzAAD/MzMA/zNmAP8zmQD/M8wA/zP/AP9m
        AAD/ZjMAzGZmAP9mmQD/ZswAzGb/AP+ZAAD/mTMA/5lmAP+ZmQD/mcwA/5n/AP/MAAD/zDMA/8xmAP/M
        mQD/zMwA/8z/AP//MwDM/2YA//+ZAP//zABmZv8AZv9mAGb//wD/ZmYA/2b/AP//ZgAhAKUAX19fAHd3
        dwCGhoYAlpaWAMvLywCysrIA19fXAN3d3QDj4+MA6urqAPHx8QD4+PgA8Pv/AKSgoACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABp5
        dFJMS+0AAAAAAAAAUllZ5XpZUysjHQrqAAAALDKgelJRS0sqMjIdChUAADIyrdTV1dXOx18LHSQKAAAy
        zc7c1c6trc7IXwoKCgAAU87NWOXl5VlSIjzHCuoAAADN++XDoKDlWSoKCgwAAAAA1V44FxbjRwEiMQzr
        AAAAAAA4+Ra9lOMgDAoNAAAAAAAAAPn5+SAgICALAAAAAAAAAAAgICAgICAgRQAAAAAAAAAAAJNGIOlG
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAPAfAADAAwAAgAEAAIAB
        AACAAQAAgAEAAMADAADAAwAA4AcAAPAPAADwDwAA+D8AAP//AAD//wAA
</value>
  </data>
</root>